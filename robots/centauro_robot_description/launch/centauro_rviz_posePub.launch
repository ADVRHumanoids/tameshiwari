<launch>
    <!-- basic set-up which progrmas should run -->
    <arg name="gazebo" default="false"/>
    <arg name="rviz" default="true"/>

    <!-- which inertia parameters should be loaded -->
    <arg name="inertia_param" default="original"/>
    <arg name="kinematic_param" default="original"/>
    <arg name="limits" default="default"/>
    <!--  <arg name="xbot_config_file" default="configs/ADVR_shared/centauro/configs/config_centauro.yaml"/> -->
    <arg name="xbot_config_file"  default="../../catkin_ws/src/DrivingFramework/configs/xbot/lower/centauro.yaml" />


    <!-- gazebo configuration parameters -->
    <arg name="paused" default="true"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="physics" default="ode"/>
    <arg name="verbose" default="false"/>
    <arg name="extra_gazebo_args" default=""/>

    <!-- choose between "xbotcore" and "ros_control" control plugin -->
    <arg name="middleware" default="xbotcore"/>

    <!-- centauro model configuration parameters -->
    <!-- centauro modules -->
    <arg name="arms" default="true"/>
    <arg name="torso" default="true"/>
    <arg name="legs" default="false"/>
    <arg name="head" default="false"/>
    <arg name="wheels" default="true"/>
    <arg name="static" default="false"/>

    <!-- choose the end-effector -->
    <arg name="left_end_effector" default="stick"/>
    <arg name="right_end_effector" default="stick"/>
    <arg name="mass" default="0.0"/>

    <!-- actuators set-up-->
    <arg name="torso_actuators" default="false"/>
    <arg name="arm_actuators" default="true"/>
    <arg name="leg_actuators" default="false"/>
    <arg name="wheels_actuators" default="false"/>
    <arg name="head_actuators" default="false"/>

    <!-- sensors set-up-->
    <arg name="arm_sensors" default="true"/>
    <arg name="leg_sensors" default="true"/>
    <arg name="ft_sensors" default="true"/>
    <arg name="bumbers" default="true"/>
    <arg name="imu" default="true"/>
    <arg name="kinect" default="true"/>
    <arg name="velodyne" default="true"/>


    <!-- which collision model should run:
        WARNING: exactly one parameter has to be true, otherwise simulation behaviour is undefined -->
    <arg name="collision_model" default="primitives"/>

    <!-- whether the mesh files should be loaded for visualization -->
    <arg name="visual_model" default="simplified"/>

    <!-- from where the simulation enviornment will be loaded:
        WARNING: exactly one parameter has to be true, otherwise simulation behaviour is undefined -->
    <arg name="world_name" default="$(find centauro_gazebo)/worlds/centauro.world"/>

    <!-- Internal arguments, rewrite human-readable gazebo arguments to it's internal arguments -->
    <arg unless="$(arg paused)" name="command_arg1" value=""/>
    <arg     if="$(arg paused)" name="command_arg1" value="-u"/>
    <arg unless="$(arg headless)" name="command_arg2" value=""/>
    <arg     if="$(arg headless)" name="command_arg2" value="-r"/>
    <arg unless="$(arg verbose)" name="command_arg3" value=""/>
    <arg     if="$(arg verbose)" name="command_arg3" value="--verbose"/>
    <arg unless="$(arg debug)" name="script_type" value="gzserver"/>
    <arg     if="$(arg debug)" name="script_type" value="debug"/>

    <!-- Load the URDF/SRDF into the ROS Parameter Server -->
    <param name="robot_description"
            command="$(find xacro)/xacro --inorder '$(find centauro)/centauro_urdf/urdf/centauro.urdf.xacro'
                    GAZEBO:=$(arg gazebo)                        MIDDLEWARE:=$(arg middleware)                   XBOT_CONFIG_FILE:=$(arg xbot_config_file)
                    STATIC:=$(arg static)                        LEFT_END_EFFECTOR:=$(arg left_end_effector)     RIGHT_END_EFFECTOR:=$(arg right_end_effector)   MASS:=$(arg mass)
                    ARMS:=$(arg arms)                            LEGS:=$(arg legs)                               TORSO:=$(arg torso)                             WHEELS:=$(arg wheels)                           HEAD:=$(arg head)
                    ARM_ACTUATORS:=$(arg arm_actuators)          LEG_ACTUATORS:=$(arg leg_actuators)             TORSO_ACTUATORS:=$(arg torso_actuators)         WHEELS_ACTUATORS:=$(arg wheels_actuators)       HEAD_ACTUATORS:=$(arg head_actuators)
                    ARM_SENSORS:=$(arg arm_sensors)              LEG_SENSORS:=$(arg leg_sensors)                 VELODYNE:=$(arg velodyne)
                    FT_SENSORS:=$(arg ft_sensors)                BUMBERS:=$(arg bumbers)                         IMU:=$(arg imu)                                 KINECT:=$(arg kinect)
                    VISUAL_MODEL:=$(arg visual_model)            COLLISION_MODEL:=$(arg collision_model) 
                    INERTIA_PARAM:=$(arg inertia_param)          KINEMATIC_PARAM:=$(arg kinematic_param)         LIMITS:=$(arg limits)
            "/>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" >
        <remap from="joint_states" to="pose_state" />
    </node>
    
    <!-- <node name="rviz" pkg="rviz" type="rviz" args=" -d $(find tameshiwari)/robots/centauro_robot_description/launch/config.rviz" /> -->
    <node name="rviz" pkg="rviz" type="rviz" />

    <!-- Launch the start up python script so it goes to initial position -->
    <node pkg="tameshiwari" type="init_state_centauro.py" name="init_state" />

    <!-- <group ns="camera1">
    <node pkg="tf" type="static_transform_publisher" name="camera_broadcaster"
        args="2.5 0.0 1.2 1.57079 0 -1.57079 L00 camera1 10" />
    <node name="camera_info" pkg="rostopic" type="rostopic"
        args="pub camera_info sensor_msgs/CameraInfo
        '{header: {seq: 0, stamp: {secs: 0, nsecs: 0}, frame_id: 'camera1'},
        height: 530, width: 640, distortion_model: 'plumb_bob',
        D: [0],
        K: [500.0, 0.0, 265, 0.0, 500.0, 320.0, 0.0, 0.0, 1.0],
        R: [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0],
        P: [500.0, 0.0, 265, 0.0, 0.0, 500, 320, 0.0, 0.0, 0.0, 1.0, 0.0],
        binning_x: 0, binning_y: 0,
        roi: {x_offset: 0, y_offset: 0, height: 530, width: 640, do_rectify: false}}' -r 2"
        output="screen"/>
    </group> -->
</launch>